basePath: /v1/{tenantId}/{integrationId}
definitions:
  d-kv_signer_api_pkg_httpserver_entities.InputCreateBundleId:
    properties:
      bundleId:
        type: string
      bundleName:
        type: string
      platform:
        type: string
      seedId:
        type: string
    type: object
  d-kv_signer_api_pkg_httpserver_entities.InputCreateCertificate:
    properties:
      NoContent:
        type: string
    type: object
  d-kv_signer_api_pkg_httpserver_entities.InputEnableCapability:
    properties:
      bundleId:
        type: string
      capabilityType:
        type: string
    type: object
  entities.BundleId:
    properties:
      capabilities:
        items:
          $ref: '#/definitions/entity.CapabilityType'
        type: array
      id:
        type: string
      identifier:
        type: string
      name:
        type: string
    type: object
  entities.Certificate:
    properties:
      content:
        type: string
    type: object
  entities.Device:
    properties:
      name:
        type: string
      platform:
        $ref: '#/definitions/entity.Platform'
      udid:
        type: string
      userId:
        type: string
    type: object
  entities.Profile:
    properties:
      content:
        type: string
    type: object
  entity.CapabilityType:
    enum:
    - IN_APP_PURCHASE
    - PUSH_NOTIFICATIONS
    - APPLE_PAY
    - NFC_TAG_READING
    - APPLE_ID_AUTH
    type: string
    x-enum-varnames:
    - InAppPurchase
    - PushNotifications
    - ApplePay
    - NfcTagReading
    - AppleIdAuth
  entity.Platform:
    enum:
    - IOS
    - MAC_OS
    type: string
    x-enum-varnames:
    - Ios
    - MacOs
  pkg_httpserver_handlers.errorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API server for AppStoreConnect project
  title: AppStoreConnect project API
  version: "1.0"
paths:
  /bundleId/{id}:
    delete:
      description: BundleId deletion by id
      operationId: delete-bundleId
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: bundleId identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion success
          schema:
            type: string
        "404":
          description: BundleId not found
          schema:
            type: string
      summary: Delete bundleId
      tags:
      - bundleId
  /bundleIds:
    get:
      description: Get all bundleIds
      operationId: get-bundleIds-list
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/entities.BundleId'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get bundleIds list
      tags:
      - bundleId
    post:
      consumes:
      - application/json
      description: Create new bundleId instance
      operationId: add-bundleId
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: bundleId params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/d-kv_signer_api_pkg_httpserver_entities.InputCreateBundleId'
      produces:
      - application/json
      responses:
        "200":
          description: commandID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Add new BundleId
      tags:
      - bundleId
  /bundleIds/{id}:
    get:
      description: Get bundleId instance by id
      operationId: get-bundleId
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: bundleId identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.BundleId'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get bundleId
      tags:
      - bundleId
  /bundleIds/status/{id}:
    post:
      description: Get command status by command id
      operationId: get-status-bundleId
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: command identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Check status
      tags:
      - bundleId
  /capabilities:
    post:
      consumes:
      - application/json
      description: Create new capability instance
      operationId: add-capability
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: capability params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/d-kv_signer_api_pkg_httpserver_entities.InputEnableCapability'
      produces:
      - application/json
      responses:
        "200":
          description: commandID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Add new capability
      tags:
      - capability
  /capabilities/{id}:
    delete:
      description: Capability deletion by id
      operationId: delete-capability
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: capability identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion success
          schema:
            type: string
        "404":
          description: Capability not found
          schema:
            type: string
      summary: Delete capability
      tags:
      - capability
  /capabilities/status/{id}:
    post:
      description: Get command status by command id
      operationId: get-status-capability
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: command identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Check status
      tags:
      - capability
  /certificates:
    get:
      description: Get all certificates
      operationId: get-certificates-list
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/entities.Certificate'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get certificates list
      tags:
      - certificate
    post:
      consumes:
      - application/json
      description: Create new certificate instance
      operationId: add-certificate
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: certificate params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/d-kv_signer_api_pkg_httpserver_entities.InputCreateCertificate'
      produces:
      - application/json
      responses:
        "200":
          description: commandID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Add new certificate
      tags:
      - certificate
  /certificates/{id}:
    delete:
      description: Certificate deletion by id
      operationId: delete-certificate
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: certificate identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion success
          schema:
            type: string
        "404":
          description: Certificate not found
          schema:
            type: string
      summary: Delete certificate
      tags:
      - certificate
    get:
      description: Get certificate instance by id
      operationId: get-certificate
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: certificate identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Certificate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get certificate
      tags:
      - certificate
  /certificates/status/{id}:
    post:
      description: Get command status by command id
      operationId: get-status-certificate
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: command identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Check status
      tags:
      - certificate
  /devices:
    get:
      description: Get all devices
      operationId: get-devices-list
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/entities.Device'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get devices list
      tags:
      - device
    post:
      consumes:
      - application/json
      description: Create new device instance
      operationId: add-device
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: device params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.Device'
      produces:
      - application/json
      responses:
        "200":
          description: commandID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Add new device
      tags:
      - device
  /devices/{id}:
    get:
      description: Get device instance by id
      operationId: get-device
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: device identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get device
      tags:
      - device
  /devices/status/{id}:
    post:
      description: Get command status by command id
      operationId: get-status-device
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: command identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Check status
      tags:
      - device
  /profiles:
    get:
      description: Get all profiles
      operationId: get-profiles-list
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/entities.Profile'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get profiles list
      tags:
      - profile
    post:
      consumes:
      - application/json
      description: Create new profile instance
      operationId: add-profile
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: profile params
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.Profile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Add new profile
      tags:
      - profile
  /profiles/{id}:
    delete:
      description: Profile deletion by id
      operationId: delete-profile
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: profile identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Deletion success
          schema:
            type: string
        "404":
          description: Profile not found
          schema:
            type: string
      summary: Delete profile
      tags:
      - profile
    get:
      description: Get profile instance by id
      operationId: get-profile
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: profile identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Get profile
      tags:
      - profile
  /profiles/status/{id}:
    post:
      description: Get command status by command id
      operationId: get-status-profile
      parameters:
      - description: tenantId
        in: path
        name: tenantId
        required: true
        type: string
      - description: integrationId
        in: path
        name: integrationId
        required: true
        type: string
      - description: command identifier
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/pkg_httpserver_handlers.errorResponse'
      summary: Check status
      tags:
      - profile
swagger: "2.0"
