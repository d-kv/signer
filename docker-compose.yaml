version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - db_command_queue
    environment:
      COMMAND_QUEUE_POSTGRES_HOST: db_command_queue
      COMMAND_QUEUE_POSTGRES_USER: "postgres"
      COMMAND_QUEUE_POSTGRES_PASSWORD: "postgres"
      COMMAND_QUEUE_POSTGRES_DB: "command_queue"
      COMMAND_QUEUE_POSTGRES_PORT: "5432"
      DOMAIN_POSTGRES_HOST: db
      DOMAIN_POSTGRES_USER: "postgres"
      DOMAIN_POSTGRES_PASSWORD: "postgres"
      DOMAIN_POSTGRES_DB: "postgres"
      DOMAIN_POSTGRES_PORT: "5433"
      VAULT_TOKEN: "my-token"
      VAULT_ADDRESS: "http://localhost:8200"
  command-executor:
    build:
      context: .
      dockerfile: docker/command-executor/Dockerfile
    depends_on:
      - db
      - db_command_queue
      - vault
    environment:
      COMMAND_QUEUE_POSTGRES_HOST: db_command_queue
      COMMAND_QUEUE_POSTGRES_USER: "postgres"
      COMMAND_QUEUE_POSTGRES_PASSWORD: "postgres"
      COMMAND_QUEUE_POSTGRES_DB: "command_queue"
      COMMAND_QUEUE_POSTGRES_PORT: "5432"
      DOMAIN_POSTGRES_HOST: db
      DOMAIN_POSTGRES_USER: "postgres"
      DOMAIN_POSTGRES_PASSWORD: "postgres"
      DOMAIN_POSTGRES_DB: "postgres"
      DOMAIN_POSTGRES_PORT: "5433"
      VAULT_TOKEN: "my-token"
      VAULT_ADDRESS: "http://localhost:8200"

  db_command_queue:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=command_queue
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db_command_queue:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5


  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    command: vault server -dev -dev-root-token-id="my-token"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "my-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_DEV_API_ADDR: "http://localhost:8200"

volumes:
  db:
    driver: local
  db_command_queue:
    driver: local
